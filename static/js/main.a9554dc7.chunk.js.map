{"version":3,"sources":["Assets/bg.png","FilePages/Home.js","FilePages/Contact.js","FilePages/Deposit.js","App.js","serviceWorker.js","FilePages/Footer.js","index.js"],"names":["module","exports","Home","className","id","Container","Row","Col","Contact","props","state","firstName","lastName","phone","email","message","e","preventDefault","axios","method","url","data","this","then","response","status","alert","resetForm","setState","href","onSubmit","handleSubmit","bind","htmlFor","type","placeholder","value","onChange","onFirstNameChange","onLastNameChange","onPhoneChange","aria-describedby","onEmailChange","rows","onMessageChange","event","target","React","Component","Deposit","routes","path","name","App","useState","expanded","setExpanded","Navbar","fixed","collapseOnSelect","expand","bg","variant","Brand","Toggle","onClick","Collapse","Nav","map","route","Link","key","as","NavLink","to","activeClassName","exact","NavDropdown","title","Item","Divider","eventKey","match","CSSTransition","in","timeout","classNames","unmountOnExit","Boolean","window","location","hostname","Footer","ReactDOM","render","src","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.a9554dc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.a5e1da9b.png\";","import React from 'react';\nimport '../FilePages/Styles.css';\nimport {Row, Col, Container} from 'react-bootstrap';\nfunction Home() {\n  return (\n    <div className=\"PageContainer\">\n      <div className=\"Page\" >\n        <h1> Web & Mobile App Developer </h1>\n            <div className=\"Intro\">\n            <div id=\"Title\"></div>\n            </div>\n            <div className=\"PageBody\">\n              <Container>\n            <Row>\n              <Col>\n              <div id=\"PageContent\">\n                \n                 <li id=\"SubTitle\"> Web Development </li>\n                 <li> Exisiting Web Site Modifications </li>\n               <li>Cross-platform Mobile Apps</li> \n                 <li> New Website Creation </li>\n                 <li>Debuging</li>\n                 <li>Search Engine Optimization </li>\n                 <li>Disabiliy friendly</li>\n                 <li>And Much more!</li>\n                 </div>\n                 </Col>\n                 <Col>\n              <div id=\"PageContent\">\n                <li id=\"SubTitle\">Android Apps</li>\n                <li>Android Phone and Tablet Apps</li>\n                <li>Wearables</li>\n                <li>Tv app</li>\n                <li>Automotive apps</li>\n                \n                </div>\n                </Col>\n                <Col>\n                \n              <div id=\"PageContent\">\n                <li id=\"SubTitle\">Apple Apps</li>\n                <li>Iphone </li>\n                <li>Mac </li>\n                <li>Apple Watch </li>\n                <li>Tv </li>\n                </div>\n                </Col>\n                </Row>\n                </Container>\n            </div>\n      </div>\n      </div>\n\n  );\n}\n\n\nexport default Home;","import React from 'react';\nimport axios from 'axios';\nimport {Row, Col, Container} from 'react-bootstrap';\nimport {Form, FormGroup, Input, Label, Button } from 'reactstrap';\nclass Contact extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      message: ''\n    }\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    axios({\n      method: \"POST\", \n      url:\"http://localhost:3002/send\", \n      data:  this.state\n    }).then((response)=>{\n      if (response.data.status === 'success') {\n        alert(\"Thank You for your time and interest! \\n Krotzer Software Developmnet sent your message successfully.\"); \n        this.resetForm()\n      } else if (response.data.status === 'fail') {\n        alert(\"Message failed to send.\")\n      }\n    })\n  }\n\n  resetForm(){\n    this.setState({firstName: \"\", lastName: \"\", phone: \"\", email: \"\", message: \"\"})\n  }\n\nrender(){\n  return (\n    <div className=\"PageContainer\">\n    <div className=\"Page\">\n    <h1> Contact </h1>\n    <div className=\"Intro\">\n      <div className=\"email\">\n        <Row>\n <Col>\n    Email: <a href=\"mailto:krotzersoftwaredevelopment@gmail.com\"> krotzersoftwaredevelopment@gmail.com </a>\n    </Col>\n    <Col>\n\n    </Col>\n    Phone:  <a href=\"tel:5418199410\"> (541) 819 9410 </a>\n    </Row>\n    </div>\n    </div>\n   \n   \n  \n  <div className=\"PageBody\">\n        \n  <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n          <div className=\"form-group\">\n              <label htmlFor=\"name\">Contact KSD today!</label>\n              <Row>\n                <Col>\n              <input type=\"text\" className=\"form-control\" placeholder=\"First Name\" id=\"firstName\" value={this.state.firstName} onChange={this.onFirstNameChange.bind(this)} />\n              </Col>\n              <br />\n              <Col>\n              <input type=\"text\" className=\"form-control\" placeholder=\"Last Name\" id=\"lastName\" value={this.state.lastName} onChange={this.onLastNameChange.bind(this)} />\n              </Col>\n              </Row>\n              <br />\n              <input type=\"text\" className=\"form-control\" placeholder=\"Phone Number\" id=\"phone\" value={this.state.phone} onChange={this.onPhoneChange.bind(this)} />\n              <br />\n              <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Email\"  aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\n          </div>\n         \n          <div className=\"form-group\">\n              <label htmlFor=\"message\">Brief discription of desired work needed</label>\n              <textarea className=\"form-control\" rows=\"10\" id=\"message\" value={this.state.message} onChange={this.onMessageChange.bind(this)} />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n   {/*}\n        <Form onSubmit={this.handleSubmit} >\n        <div id=\"PageContent\">\n        <FormGroup>\n    \n        <Label for=\"name\"><div id=\"SubTitle\"> Name </div></Label>\n       \n        <div>First Name: <Input\n        \n             type=\"text\"\n             name=\"name\"\n             onChange={this.handleChange} />\n            </div>\n        </FormGroup>\n        </div>        \n        <div id=\"PageContent\">\n     \n        <FormGroup>\n        <Label for=\"email\"><div id=\"SubTitle\"> Email </div></Label>\n        <div>Email : <Input\n             type=\"email\"\n             name=\"email\"\n             onChange={this.handleChange} />\n             </div>\n        </FormGroup>\n        </div>\n        <div id=\"PageContent\">\n        <FormGroup>\n        <Label for=\"message\"><div id=\"SubTitle\"> Message </div></Label>\n        <Input\n             type=\"textarea\"\n             className=\"messageBoxStyle\"\n             name=\"message\"\n             size=\"20vw\"\n             onChange={this.handleChange} />\n        </FormGroup>\n        </div>\n        <div id=\"PageContent\">\n          <div className=\"Button\">\n          <button type=\"submit\"> Submit </button>\n         </div>\n         </div>\n        </Form>\n        */}\n\n        </div>\n        </div>\n        </div>\n        \n      );\n  }\n  onFirstNameChange(event) {\n    this.setState({firstName: event.target.value})\n  }\n  onLastNameChange(event) {\n    this.setState({lastName: event.target.value})\n  }\n  onPhoneChange(event) {\n    this.setState({phone: event.target.value})\n  }\n\n  onEmailChange(event) {\n    this.setState({email: event.target.value})\n  }\n\n  onMessageChange(event) {\n    this.setState({message: event.target.value})\n  }\n}\n\nexport default Contact;","import React from 'react';\n\nfunction Deposit() {\n  return (\n    <div className=\"PageContainer\">\n    <div className=\"Page\">\n    <h1>Payments</h1>\n    <div className=\"Intro\">\n    <div id=\"Title\"> </div>\n    </div>\n     <div id=\"PageBody\">\n    <div id=\"PageContent\">\n      <div id=\"SubTitle\"> Discounts </div>\n     Discounts offered for small businesses impacted by covid.\n     <br />\n     <br />\n     Please make sure you have had a phone consultation; before making any form of deposit or payment.\n   </div>\n   <div id=\"PageContent\">\n   <div id=\"SubTitle\"> Payment Methods </div>\n  Stripe payments coming soon!\n  </div>\n<div id=\"PageContent\">\n   <div id=\"SubTitle\"> Crypto Currency</div>\n   <div id=\"Title\">Bitcoin:</div>\n   <p id=\"Crypto\">3HatRvtFeubW1NASJbvy4ghekHWveprS8H</p>\n   <div id=\"Title\"> Ethereum: </div>\n   <p id=\"Crypto\">0x9527a7b2325cfe157e4a3a50ac1275be46770702</p>\n   <div id=\"Title\"> LiteCoin: </div>\n   <p id=\"Crypto\">LXYsXXZMhTPuwbFZ4zTBXFSojPAKBxJFWg </p>\n   <div id=\"Title\">Ripple:</div>\n   <p id=\"Crypto\">rwpMvfxoodXggJ1g4qv6MWAPQqWDwQyHUW</p>\n   </div>\n  </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Deposit;","import React, { useState } from 'react';\nimport {Container, Nav, NavDropdown, Navbar} from 'react-bootstrap';\nimport { CSSTransition } from 'react-transition-group';\nimport Home from './FilePages/Home';\nimport './FilePages/Styles.css';\nimport Contact from './FilePages/Contact';\nimport Deposit from './FilePages/Deposit';\nimport { BrowserRouter as  Router, Route, Link, NavLink } from 'react-router-dom';\n\nconst routes = [\n    { path: '/Home', name: 'Home', Component: Home },\n    { path: '/Contact', name: 'Contact', Component: Contact },\n    { path: '/Deposit', name: 'Deposit', Component: Deposit },\n    \n  ]\nfunction App () {\n    const [expanded, setExpanded] = useState(false);\n  return (\n      <div>\n    \n    <Navbar  fixed=\"top\" collapseOnSelect expand=\"lg\"expanded={expanded} bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand > KSD </Navbar.Brand>\n    <Navbar.Toggle  onClick={() => setExpanded(expanded ? false : \"expanded\")} />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n  <Nav className=\"mr-auto\"  >\n            {routes.map(route => (\n            \n              <Nav.Link\n              onClick={() => setExpanded(false)}\n\n                key={route.path}\n                as={NavLink}\n                to={route.path}\n                activeClassName=\"active\"\n                exact\n                \n              >\n                \n                {route.name}\n                \n              </Nav.Link>\n            ))}\n            \n            <NavDropdown title=\"Portfolio\" id=\"collasible-nav-dropdown\">\n        <NavDropdown.Item href=\"https://www.homeraisedcairns.com/\"> Home Raised Cairns - AKC Puppies</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"https://github.com/KrotzerSoftwareDevelopment/\"> GitHub </NavDropdown.Item>\n      </NavDropdown>\n          </Nav>\n   \n    <Nav>\n    <NavDropdown.Divider />\n      <Nav.Link eventKey={2} href=\"https://www.linkedin.com/in/dean-krotzer-0800b11a2/\">\n        LinkedIn\n      </Nav.Link>\n    </Nav>\n  </Navbar.Collapse>\n\n</Navbar>\n<div className=\"containertwo\">\n<Container className=\"container\">\n          {routes.map(({ path, Component }) => (\n            <Route key={path} exact path={path}>\n              {({ match }) => (\n                <CSSTransition\n                \n                  in={match != null}\n                  \n                  timeout={1000}\n                  classNames=\"pages\"\n                  unmountOnExit\n                >\n                 \n                    <Component />\n                  \n                </CSSTransition>\n              )}\n            </Route>\n          ))}\n        </Container>\n        </div>\n</div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <div className=\"Footer\">\n\n     <p id=\"copyRight\"> &copy; 2020  Krotzer Software Development\n     </p>\n     </div>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport './FilePages/Styles.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport bg from './Assets/bg.png';\nimport Footer from './FilePages/Footer.js';\nReactDOM.render(\n    \n    \n    <div className=\"wholeBg\">\n        <img className=\"bgStyle\" src={bg} />\n    <BrowserRouter>\n    \n    <App />\n<Footer />\n    </BrowserRouter>\n    </div>\n    ,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}