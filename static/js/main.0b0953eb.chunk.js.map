{"version":3,"sources":["FilePages/HomePage.js","FilePages/About.js","FilePages/Consult.js","FilePages/Contact.js","FilePages/Portfolio.js","App.js","serviceWorker.js","FilePages/Footer.js","index.js","Assets/PortfolioPic.png","Assets/bg.png"],"names":["HomePage","className","id","About","src","PortPic","Constult","Contact","handleChange","e","setState","target","name","value","state","email","message","bind","handleSubmit","preventDefault","this","axios","post","Form","onSubmit","FormGroup","Label","for","Input","type","onChange","size","Button","React","Component","Portfolio","App","Navbar","fixed","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Nav","Link","to","NavDropdown","Divider","path","exact","component","Boolean","window","location","hostname","match","Footer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.0b0953eb.chunk.js","sourcesContent":["import React from 'react';\nimport '../FilePages/Styles.css';\nfunction HomePage() {\n  return (\n    <div className=\"Page\">\n      <div className=\"homePage\" >\n      <div className=\"TitleHome\">\n     \n            <h1>Mobile Application Developer</h1>\n            <h4>With a Mobile Application Developer Degree</h4>\n            \n            </div>\n            <div id=\"blockStyle\">\n            <p>  The biggest reason I am a React full-stack developer is that react-native allows me to write code one time and that code is able to be reused on android and apple app stores as well as a web app! The best part react isn't like Cordova where you are really dealing with a less then native coding level, making unsecure code that can become laggy, but with react your app on android and apple is and functions as\n natively as writing in all java (android) or Swift(apple) so my time coding up your next dream will take less time without compromise, saving you more money!\n\n            </p>\n            <p>I do not use wix or wordpress or any other cookie cuter type software, I am a custom software solution</p>\n            <p>\n              In school i took a 4 month class alone on just typography! <br />\n              \n              I was taught things like designing with the end user in mind and tuaght to be more mindful of what the user experence should be!\n            </p>\n            </div>\n            \n            <p id=\"homeTitle\">Currently Accepting:</p>\n        \n            <ul>\n          \n            <div id=\"blockStyle\">\n            <li id=\"subTilte\"> Web Development Applicates</li>\n                 <li>Exisiting Web Site Modifications</li>\n                 <li> React Native Apps </li>\n                 <li>New Website Creation</li>\n                 <li>Troubleshooting</li>\n                 <li>Debuging</li>\n                 <li>Bootstraped Options, Pros: Faster Build Times, Often Cheaper Cons: bigger builds can become massive in size</li>\n                 <li>Fully Hand Coded Options Pros: Can be more secure, more customizable and effieteint Cons: can be more expensive and take longer to develop</li>\n</div>\n<div id=\"blockStyle\">\n            <li id=\"subTitle\">Android Apps</li>\n                <li>Phone and Tablet Apps</li>\n                <li>Wear Os</li>\n                <li>Tv Os</li>\n                <li>Automotive</li>\n                <li>Cross-platform</li>\n                </div>\n                <div id=\"blockStyle\">\n           <li id=\"subTitle\">Apple Apps</li>\n                <li>Ios</li>\n                <li>Mac Os</li>\n                <li>Watch Os</li>\n                <li>Tv Os</li>\n                <li>Cross-platform</li>\n                </div>\n                <div id=\"blockStyle\">\n            </div>\n            \n            </ul>\n      </div>\n      </div>\n\n  );\n}\n\n\nexport default HomePage;","import React from 'react';\nimport PortPic from '../Assets/PortfolioPic.png';\nfunction About() {\n  return (\n    <div className=\"Page\">\n    <div className=\"About\">\n    \n    <div>\n  \n    <h1>About me</h1>\n    \n     <div id=\"blockStyle\">\n    <p className=\"about-paragraph\">\n    <img className=\"port-pic-container\" src={PortPic} />\n   \n   <br />\n   <p>Why React?</p>\n    <p>\n    React using cross integrate to both mobile app stores. So I write the code once and use that code on Apple and Android.\n React development is what I thrive on, I love that react isn't a viewport type setup similar to something like Cordova.\n React Native Development allows me to create a web app that can also be integrated into Android and IOs without having to re-write code.\n    </p>\n    <p> About myself more.. </p>\n    My Myers Briggs personality test indicates I am an INTJ-A, The Architect. \n    <br />\n    <br />\n    Besides being a motivated self-starter that enjoys all things tech. \n    I work well with others, quick to learn new things, multitasker, reliable and most of all I am great at solving problems. \n    I \n\n    <br />\n    I have coded in many different languages and I am comfortable in many like Java (Android), Python, Swift(Apple), Javascript, and even PHP.\n My services are more geared towards making fully customizable hand-coded react to web apps or apps for apple and android or even all three.\n which is great for most big or small sites that can handle multiple tasks.\n Let me help you solve your tech-related problems today!\n        </p>\n        <br />\n       \n        </div>\n    </div>\n    </div>\n    </div>\n  );\n}\n\nexport default About;","import React from 'react';\n\nfunction Constult () {\n  return (\n    <div className=\"Page\">\n    <div className=\"Consult\">\n    <div className=\"Title\">\n          \n    <h1>Consult </h1>\n    </div>\n    <div id=\"blockStyle\">\n    Feel free to schedule an Appointment with me today! \n\n    </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Constult;","import React from 'react';\nimport axios from 'axios';\nimport {Form, FormGroup, Input, Label, Button } from 'reactstrap';\nclass Contact extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n        name: ' ',\n        email: ' ',\n        message:' '\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n}\n\nhandleChange = e => {\nthis.setState({ [e.target.name]: e.target.value })\n}\nasync handleSubmit(e) {\ne.preventDefault()\nconst { name, email, message } = this.state\nconst form = await axios.post('/api/form', {\n    name, \n    email,\n    message\n})\n}\nrender(){\n  return (\n    <div className=\"Page\">\n    <div className=\"Contact\">\n    <h1>Contact</h1>\n    \n      \n        <h4>Please send me an email</h4>\n        \n        <div className=\"column\">\n        \n        <Form onSubmit={this.handleSubmit} >\n        <div id=\"blockStyle\">\n        <FormGroup>\n    \n        <Label for=\"name\"><div id=\"containerTitle\">Name</div></Label>\n       \n        <div>First Name: <Input\n        \n             type=\"text\"\n             name=\"name\"\n             onChange={this.handleChange} />\n            </div>\n        </FormGroup>\n        </div>        \n        <div id=\"blockStyle\">\n     \n        <FormGroup>\n        <Label for=\"email\"><div id=\"containerTitle\">Email</div></Label>\n        <div>Email : <Input\n             type=\"email\"\n             name=\"email\"\n             onChange={this.handleChange} />\n             </div>\n        </FormGroup>\n        </div>\n        <div id=\"blockStyle\">\n        <FormGroup>\n        <Label for=\"message\"><div id=\"containerTitle\">Message </div></Label>\n        <Input\n             type=\"textarea\"\n             className=\"messageBoxStyle\"\n             name=\"message\"\n             size=\"20vw\"\n             onChange={this.handleChange} />\n        </FormGroup>\n        </div>\n        <div id=\"blockStyle\">\n         <Button id=\"containerTitle\" >Submit</Button>\n         </div>\n        </Form>\n        \n        </div>\n  \n        </div>\n        </div>\n        \n      );\n  }\n}\n\nexport default Contact;","import React from 'react';\n\nfunction Portfolio() {\n  return (\n    <div className=\"Page\">\n    <div className=\"Portfolio\">\n    <div className=\"Title\">\n          \n    <h1>Portfolio </h1>\n    </div>\n    Searchable menu with cards of projects made.\n    <div id=\"blockStyle\">\n    <div id=\"pageTitle\">\n    Apple\n    </div>\n    <div id=\"pageTitle\">\n    Google Play Store\n    </div>\n    <div>\n      Web Apps\n    </div>\n\n    </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Portfolio;","import React from 'react';\nimport './FilePages/Styles.css';\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\nimport HomePage from './FilePages/HomePage';\nimport About from './FilePages/About';\nimport Consult from './FilePages/Consult';\nimport Contact from './FilePages/Contact';\nimport Portfolio from './FilePages/Portfolio';\nimport {BrowserRouter, Route, Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n    <div className=\"NaviStyle\">\n    <BrowserRouter>\n    <Navbar fixed=\"top\" />\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n  <Navbar.Brand> \n\n  </Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"mr-auto\">\n    <Nav.Link><Link to=\"/HomePage\"> KSD </Link></Nav.Link>\n      <Nav.Link><Link to=\"/About\"> About </Link></Nav.Link>\n      <Nav.Link><Link to=\"/Contact\"> Contact </Link></Nav.Link>\n      {/*\n      <Nav.Link><Link to=\"/Consult\"> Consult </Link></Nav.Link>\n      <Nav.Link><Link to=\"/Portfolio\"> Portfolio </Link></Nav.Link>\n      */}\n      <NavDropdown.Divider />\n    </Nav>\n  </Navbar.Collapse>\n</Navbar>\n\n    <div className=\"grid-container\">\n   \n<main className=\"main\">\n    <div className=\"content\">\n    <Route path=\"/HomePage\" exact={true} component={HomePage} />\n    <Route path=\"/About\" component={About} />\n\n    <Route path=\"/Contact\" component={Contact} />\n    {/*\n    <Route path=\"/Consult\" component={Consult} />\n    <Route path=\"/Portfolio\" component={Portfolio} />\n    */}\n</div>\n    \n</main>\n\n</div>\n</BrowserRouter>\n</div>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <div className=\"Footer\">\n\n     <p id=\"copyRight\"> &copy; 2020  Krotzer Software Development\n     </p>\n     </div>\n  );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, Switch } from 'react-router-dom';\n\nimport bg from './Assets/bg.png';\nimport Footer from './FilePages/Footer.js';\nReactDOM.render(\n    \n    \n    <div className=\"wholeBg\">\n         <img className=\"bgStyle\" src={bg} />\n    <BrowserRouter>\n    <App />\n<Footer />\n    </BrowserRouter>\n    </div>\n    ,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/PortfolioPic.89ae5b55.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.61774f5d.png\";"],"sourceRoot":""}